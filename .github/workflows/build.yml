name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            setup_cross: true
          - os: windows-latest
            setup_cross: false
          - os: macos-latest
            setup_cross: false

    steps:
    - uses: actions/checkout@v4.2.2

    - name: Setup Node.js
      uses: actions/setup-node@v4.1.0
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'scripts/package.json'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: |
          x86_64-unknown-linux-gnu
          aarch64-unknown-linux-gnu
          x86_64-unknown-freebsd
          x86_64-pc-windows-msvc
          x86_64-apple-darwin
          aarch64-apple-darwin

    - name: Install cross
      if: matrix.setup_cross
      run: cargo install cross

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          protobuf-compiler \
          pkg-config \
          libssl-dev \
          openssl

        echo "OPENSSL_DIR=/usr" >> $GITHUB_ENV
        echo "OPENSSL_LIB_DIR=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV
        echo "OPENSSL_INCLUDE_DIR=/usr/include/openssl" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig" >> $GITHUB_ENV

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: |
        brew install \
          protobuf \
          pkg-config \
          openssl@3
        echo "OPENSSL_DIR=$(brew --prefix openssl@3)" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$(brew --prefix openssl@3)/lib/pkgconfig" >> $GITHUB_ENV

    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      run: |
        choco install -y protoc
        choco install -y openssl
        echo "OPENSSL_DIR=C:/Program Files/OpenSSL-Win64" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=C:/Program Files/OpenSSL-Win64/lib/pkgconfig" >> $GITHUB_ENV

    - name: Build (Dynamic)
      run: bash scripts/build.sh

    - name: Build (Static)
      run: bash scripts/build.sh --static

    - name: Upload artifacts
      uses: actions/upload-artifact@v4.5.0
      with:
        name: binaries-${{ matrix.os }}
        path: release/*
        retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4.2.2

    - name: Download all artifacts
      uses: actions/download-artifact@v4.1.8
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        mkdir release
        cd artifacts
        for dir in binaries-*; do
          cp -r "$dir"/* ../release/
        done

    - name: Generate checksums
      run: |
        cd release
        sha256sum * > SHA256SUMS.txt

    - name: Create Release
      uses: softprops/action-gh-release@v2.2.0
      with:
        files: |
          release/*
        draft: false
        prerelease: false
        generate_release_notes: true
        fail_on_unmatched_files: true